// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.20.0
// source: organisms/v1/organisms.proto

package v1

import (
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CreateOrganismsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mobile   string `protobuf:"bytes,1,opt,name=mobile,proto3" json:"mobile,omitempty"`     // 手机号码|账号
	NickName string `protobuf:"bytes,2,opt,name=nickName,proto3" json:"nickName,omitempty"` // 账号名称
	Password string `protobuf:"bytes,3,opt,name=password,proto3" json:"password,omitempty"` // 原始密码 - ^(?=.*[0-9])(?=.*[a-z])(?=.*[A-Z]).{8,16}$
	Salt     string `protobuf:"bytes,4,opt,name=salt,proto3" json:"salt,omitempty"`         // 密码盐值
}

func (x *CreateOrganismsRequest) Reset() {
	*x = CreateOrganismsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_organisms_v1_organisms_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateOrganismsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateOrganismsRequest) ProtoMessage() {}

func (x *CreateOrganismsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_organisms_v1_organisms_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateOrganismsRequest.ProtoReflect.Descriptor instead.
func (*CreateOrganismsRequest) Descriptor() ([]byte, []int) {
	return file_organisms_v1_organisms_proto_rawDescGZIP(), []int{0}
}

func (x *CreateOrganismsRequest) GetMobile() string {
	if x != nil {
		return x.Mobile
	}
	return ""
}

func (x *CreateOrganismsRequest) GetNickName() string {
	if x != nil {
		return x.NickName
	}
	return ""
}

func (x *CreateOrganismsRequest) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *CreateOrganismsRequest) GetSalt() string {
	if x != nil {
		return x.Salt
	}
	return ""
}

type CreateOrganismsReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Exec    bool   `protobuf:"varint,1,opt,name=exec,proto3" json:"exec,omitempty"`
	Explain string `protobuf:"bytes,2,opt,name=explain,proto3" json:"explain,omitempty"`
}

func (x *CreateOrganismsReply) Reset() {
	*x = CreateOrganismsReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_organisms_v1_organisms_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateOrganismsReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateOrganismsReply) ProtoMessage() {}

func (x *CreateOrganismsReply) ProtoReflect() protoreflect.Message {
	mi := &file_organisms_v1_organisms_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateOrganismsReply.ProtoReflect.Descriptor instead.
func (*CreateOrganismsReply) Descriptor() ([]byte, []int) {
	return file_organisms_v1_organisms_proto_rawDescGZIP(), []int{1}
}

func (x *CreateOrganismsReply) GetExec() bool {
	if x != nil {
		return x.Exec
	}
	return false
}

func (x *CreateOrganismsReply) GetExplain() string {
	if x != nil {
		return x.Explain
	}
	return ""
}

type UpdateOrganismsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Mobile   string `protobuf:"bytes,2,opt,name=mobile,proto3" json:"mobile,omitempty"`     // 手机号码|账号
	NickName string `protobuf:"bytes,3,opt,name=nickName,proto3" json:"nickName,omitempty"` // 账号名称
}

func (x *UpdateOrganismsRequest) Reset() {
	*x = UpdateOrganismsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_organisms_v1_organisms_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateOrganismsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateOrganismsRequest) ProtoMessage() {}

func (x *UpdateOrganismsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_organisms_v1_organisms_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateOrganismsRequest.ProtoReflect.Descriptor instead.
func (*UpdateOrganismsRequest) Descriptor() ([]byte, []int) {
	return file_organisms_v1_organisms_proto_rawDescGZIP(), []int{2}
}

func (x *UpdateOrganismsRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateOrganismsRequest) GetMobile() string {
	if x != nil {
		return x.Mobile
	}
	return ""
}

func (x *UpdateOrganismsRequest) GetNickName() string {
	if x != nil {
		return x.NickName
	}
	return ""
}

type UpdateOrganismsReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Exec    bool   `protobuf:"varint,1,opt,name=exec,proto3" json:"exec,omitempty"`
	Explain string `protobuf:"bytes,2,opt,name=explain,proto3" json:"explain,omitempty"`
}

func (x *UpdateOrganismsReply) Reset() {
	*x = UpdateOrganismsReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_organisms_v1_organisms_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateOrganismsReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateOrganismsReply) ProtoMessage() {}

func (x *UpdateOrganismsReply) ProtoReflect() protoreflect.Message {
	mi := &file_organisms_v1_organisms_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateOrganismsReply.ProtoReflect.Descriptor instead.
func (*UpdateOrganismsReply) Descriptor() ([]byte, []int) {
	return file_organisms_v1_organisms_proto_rawDescGZIP(), []int{3}
}

func (x *UpdateOrganismsReply) GetExec() bool {
	if x != nil {
		return x.Exec
	}
	return false
}

func (x *UpdateOrganismsReply) GetExplain() string {
	if x != nil {
		return x.Explain
	}
	return ""
}

type UpdateOrganismsPasswordRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	OPassword string `protobuf:"bytes,2,opt,name=oPassword,proto3" json:"oPassword,omitempty"` // 旧密码
	NPassword string `protobuf:"bytes,3,opt,name=nPassword,proto3" json:"nPassword,omitempty"` // 新密码
}

func (x *UpdateOrganismsPasswordRequest) Reset() {
	*x = UpdateOrganismsPasswordRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_organisms_v1_organisms_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateOrganismsPasswordRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateOrganismsPasswordRequest) ProtoMessage() {}

func (x *UpdateOrganismsPasswordRequest) ProtoReflect() protoreflect.Message {
	mi := &file_organisms_v1_organisms_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateOrganismsPasswordRequest.ProtoReflect.Descriptor instead.
func (*UpdateOrganismsPasswordRequest) Descriptor() ([]byte, []int) {
	return file_organisms_v1_organisms_proto_rawDescGZIP(), []int{4}
}

func (x *UpdateOrganismsPasswordRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateOrganismsPasswordRequest) GetOPassword() string {
	if x != nil {
		return x.OPassword
	}
	return ""
}

func (x *UpdateOrganismsPasswordRequest) GetNPassword() string {
	if x != nil {
		return x.NPassword
	}
	return ""
}

type UpdateOrganismsPasswordReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Exec    bool   `protobuf:"varint,1,opt,name=exec,proto3" json:"exec,omitempty"`
	Explain string `protobuf:"bytes,2,opt,name=explain,proto3" json:"explain,omitempty"`
}

func (x *UpdateOrganismsPasswordReply) Reset() {
	*x = UpdateOrganismsPasswordReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_organisms_v1_organisms_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateOrganismsPasswordReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateOrganismsPasswordReply) ProtoMessage() {}

func (x *UpdateOrganismsPasswordReply) ProtoReflect() protoreflect.Message {
	mi := &file_organisms_v1_organisms_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateOrganismsPasswordReply.ProtoReflect.Descriptor instead.
func (*UpdateOrganismsPasswordReply) Descriptor() ([]byte, []int) {
	return file_organisms_v1_organisms_proto_rawDescGZIP(), []int{5}
}

func (x *UpdateOrganismsPasswordReply) GetExec() bool {
	if x != nil {
		return x.Exec
	}
	return false
}

func (x *UpdateOrganismsPasswordReply) GetExplain() string {
	if x != nil {
		return x.Explain
	}
	return ""
}

type DeleteOrganismsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteOrganismsRequest) Reset() {
	*x = DeleteOrganismsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_organisms_v1_organisms_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteOrganismsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteOrganismsRequest) ProtoMessage() {}

func (x *DeleteOrganismsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_organisms_v1_organisms_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteOrganismsRequest.ProtoReflect.Descriptor instead.
func (*DeleteOrganismsRequest) Descriptor() ([]byte, []int) {
	return file_organisms_v1_organisms_proto_rawDescGZIP(), []int{6}
}

func (x *DeleteOrganismsRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type DeleteOrganismsReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Exec    bool   `protobuf:"varint,1,opt,name=exec,proto3" json:"exec,omitempty"`
	Explain string `protobuf:"bytes,2,opt,name=explain,proto3" json:"explain,omitempty"`
}

func (x *DeleteOrganismsReply) Reset() {
	*x = DeleteOrganismsReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_organisms_v1_organisms_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteOrganismsReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteOrganismsReply) ProtoMessage() {}

func (x *DeleteOrganismsReply) ProtoReflect() protoreflect.Message {
	mi := &file_organisms_v1_organisms_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteOrganismsReply.ProtoReflect.Descriptor instead.
func (*DeleteOrganismsReply) Descriptor() ([]byte, []int) {
	return file_organisms_v1_organisms_proto_rawDescGZIP(), []int{7}
}

func (x *DeleteOrganismsReply) GetExec() bool {
	if x != nil {
		return x.Exec
	}
	return false
}

func (x *DeleteOrganismsReply) GetExplain() string {
	if x != nil {
		return x.Explain
	}
	return ""
}

type RecoveryOrganismsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *RecoveryOrganismsRequest) Reset() {
	*x = RecoveryOrganismsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_organisms_v1_organisms_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RecoveryOrganismsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecoveryOrganismsRequest) ProtoMessage() {}

func (x *RecoveryOrganismsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_organisms_v1_organisms_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecoveryOrganismsRequest.ProtoReflect.Descriptor instead.
func (*RecoveryOrganismsRequest) Descriptor() ([]byte, []int) {
	return file_organisms_v1_organisms_proto_rawDescGZIP(), []int{8}
}

func (x *RecoveryOrganismsRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type RecoveryOrganismsReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Exec    bool   `protobuf:"varint,1,opt,name=exec,proto3" json:"exec,omitempty"`
	Explain string `protobuf:"bytes,2,opt,name=explain,proto3" json:"explain,omitempty"`
}

func (x *RecoveryOrganismsReply) Reset() {
	*x = RecoveryOrganismsReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_organisms_v1_organisms_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RecoveryOrganismsReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecoveryOrganismsReply) ProtoMessage() {}

func (x *RecoveryOrganismsReply) ProtoReflect() protoreflect.Message {
	mi := &file_organisms_v1_organisms_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecoveryOrganismsReply.ProtoReflect.Descriptor instead.
func (*RecoveryOrganismsReply) Descriptor() ([]byte, []int) {
	return file_organisms_v1_organisms_proto_rawDescGZIP(), []int{9}
}

func (x *RecoveryOrganismsReply) GetExec() bool {
	if x != nil {
		return x.Exec
	}
	return false
}

func (x *RecoveryOrganismsReply) GetExplain() string {
	if x != nil {
		return x.Explain
	}
	return ""
}

type ReadOrganismsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *ReadOrganismsRequest) Reset() {
	*x = ReadOrganismsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_organisms_v1_organisms_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadOrganismsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadOrganismsRequest) ProtoMessage() {}

func (x *ReadOrganismsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_organisms_v1_organisms_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadOrganismsRequest.ProtoReflect.Descriptor instead.
func (*ReadOrganismsRequest) Descriptor() ([]byte, []int) {
	return file_organisms_v1_organisms_proto_rawDescGZIP(), []int{10}
}

func (x *ReadOrganismsRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type ReadOrganismsReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Exec      bool            `protobuf:"varint,1,opt,name=exec,proto3" json:"exec,omitempty"`
	Explain   string          `protobuf:"bytes,2,opt,name=explain,proto3" json:"explain,omitempty"`
	Organisms *OrganismsReply `protobuf:"bytes,3,opt,name=Organisms,proto3" json:"Organisms,omitempty"`
}

func (x *ReadOrganismsReply) Reset() {
	*x = ReadOrganismsReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_organisms_v1_organisms_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadOrganismsReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadOrganismsReply) ProtoMessage() {}

func (x *ReadOrganismsReply) ProtoReflect() protoreflect.Message {
	mi := &file_organisms_v1_organisms_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadOrganismsReply.ProtoReflect.Descriptor instead.
func (*ReadOrganismsReply) Descriptor() ([]byte, []int) {
	return file_organisms_v1_organisms_proto_rawDescGZIP(), []int{11}
}

func (x *ReadOrganismsReply) GetExec() bool {
	if x != nil {
		return x.Exec
	}
	return false
}

func (x *ReadOrganismsReply) GetExplain() string {
	if x != nil {
		return x.Explain
	}
	return ""
}

func (x *ReadOrganismsReply) GetOrganisms() *OrganismsReply {
	if x != nil {
		return x.Organisms
	}
	return nil
}

type ListOrganismsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pn        int32  `protobuf:"varint,1,opt,name=pn,proto3" json:"pn,omitempty"`            // 选择页
	PSize     int32  `protobuf:"varint,2,opt,name=pSize,proto3" json:"pSize,omitempty"`      // 选择页列表项数量
	Mobile    string `protobuf:"bytes,3,opt,name=mobile,proto3" json:"mobile,omitempty"`     // 手机号码|账号
	NickName  string `protobuf:"bytes,4,opt,name=nickName,proto3" json:"nickName,omitempty"` // 账号名称
	IsDeleted int32  `protobuf:"varint,5,opt,name=isDeleted,proto3" json:"isDeleted,omitempty"`
}

func (x *ListOrganismsRequest) Reset() {
	*x = ListOrganismsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_organisms_v1_organisms_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListOrganismsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListOrganismsRequest) ProtoMessage() {}

func (x *ListOrganismsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_organisms_v1_organisms_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListOrganismsRequest.ProtoReflect.Descriptor instead.
func (*ListOrganismsRequest) Descriptor() ([]byte, []int) {
	return file_organisms_v1_organisms_proto_rawDescGZIP(), []int{12}
}

func (x *ListOrganismsRequest) GetPn() int32 {
	if x != nil {
		return x.Pn
	}
	return 0
}

func (x *ListOrganismsRequest) GetPSize() int32 {
	if x != nil {
		return x.PSize
	}
	return 0
}

func (x *ListOrganismsRequest) GetMobile() string {
	if x != nil {
		return x.Mobile
	}
	return ""
}

func (x *ListOrganismsRequest) GetNickName() string {
	if x != nil {
		return x.NickName
	}
	return ""
}

func (x *ListOrganismsRequest) GetIsDeleted() int32 {
	if x != nil {
		return x.IsDeleted
	}
	return 0
}

type ListOrganismsReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Exec    bool              `protobuf:"varint,1,opt,name=exec,proto3" json:"exec,omitempty"`
	Explain string            `protobuf:"bytes,2,opt,name=explain,proto3" json:"explain,omitempty"`
	Total   int64             `protobuf:"varint,3,opt,name=total,proto3" json:"total,omitempty"`
	Data    []*OrganismsReply `protobuf:"bytes,4,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *ListOrganismsReply) Reset() {
	*x = ListOrganismsReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_organisms_v1_organisms_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListOrganismsReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListOrganismsReply) ProtoMessage() {}

func (x *ListOrganismsReply) ProtoReflect() protoreflect.Message {
	mi := &file_organisms_v1_organisms_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListOrganismsReply.ProtoReflect.Descriptor instead.
func (*ListOrganismsReply) Descriptor() ([]byte, []int) {
	return file_organisms_v1_organisms_proto_rawDescGZIP(), []int{13}
}

func (x *ListOrganismsReply) GetExec() bool {
	if x != nil {
		return x.Exec
	}
	return false
}

func (x *ListOrganismsReply) GetExplain() string {
	if x != nil {
		return x.Explain
	}
	return ""
}

func (x *ListOrganismsReply) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *ListOrganismsReply) GetData() []*OrganismsReply {
	if x != nil {
		return x.Data
	}
	return nil
}

type OrganismsReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            int64               `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Mobile        string              `protobuf:"bytes,2,opt,name=mobile,proto3" json:"mobile,omitempty"`
	NickName      string              `protobuf:"bytes,3,opt,name=nickName,proto3" json:"nickName,omitempty"`
	CreatedAt     string              `protobuf:"bytes,4,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	CreatedBy     string              `protobuf:"bytes,5,opt,name=createdBy,proto3" json:"createdBy,omitempty"`
	UpdatedAt     string              `protobuf:"bytes,6,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
	UpdatedBy     string              `protobuf:"bytes,7,opt,name=updatedBy,proto3" json:"updatedBy,omitempty"`
	IsDeleted     bool                `protobuf:"varint,8,opt,name=isDeleted,proto3" json:"isDeleted,omitempty"`
	OrganismsInfo *OrganismsInfoReply `protobuf:"bytes,9,opt,name=organismsInfo,proto3" json:"organismsInfo,omitempty"`
}

func (x *OrganismsReply) Reset() {
	*x = OrganismsReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_organisms_v1_organisms_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrganismsReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrganismsReply) ProtoMessage() {}

func (x *OrganismsReply) ProtoReflect() protoreflect.Message {
	mi := &file_organisms_v1_organisms_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrganismsReply.ProtoReflect.Descriptor instead.
func (*OrganismsReply) Descriptor() ([]byte, []int) {
	return file_organisms_v1_organisms_proto_rawDescGZIP(), []int{14}
}

func (x *OrganismsReply) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *OrganismsReply) GetMobile() string {
	if x != nil {
		return x.Mobile
	}
	return ""
}

func (x *OrganismsReply) GetNickName() string {
	if x != nil {
		return x.NickName
	}
	return ""
}

func (x *OrganismsReply) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *OrganismsReply) GetCreatedBy() string {
	if x != nil {
		return x.CreatedBy
	}
	return ""
}

func (x *OrganismsReply) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

func (x *OrganismsReply) GetUpdatedBy() string {
	if x != nil {
		return x.UpdatedBy
	}
	return ""
}

func (x *OrganismsReply) GetIsDeleted() bool {
	if x != nil {
		return x.IsDeleted
	}
	return false
}

func (x *OrganismsReply) GetOrganismsInfo() *OrganismsInfoReply {
	if x != nil {
		return x.OrganismsInfo
	}
	return nil
}

type OrganismsInfoReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	RealName    string `protobuf:"bytes,2,opt,name=realName,proto3" json:"realName,omitempty"`
	Email       string `protobuf:"bytes,3,opt,name=email,proto3" json:"email,omitempty"`
	IdCard      string `protobuf:"bytes,4,opt,name=idCard,proto3" json:"idCard,omitempty"`
	HomeAddress string `protobuf:"bytes,5,opt,name=homeAddress,proto3" json:"homeAddress,omitempty"`
	CreatedAt   string `protobuf:"bytes,6,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	CreatedBy   string `protobuf:"bytes,7,opt,name=createdBy,proto3" json:"createdBy,omitempty"`
	UpdatedAt   string `protobuf:"bytes,8,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
	UpdatedBy   string `protobuf:"bytes,9,opt,name=updatedBy,proto3" json:"updatedBy,omitempty"`
}

func (x *OrganismsInfoReply) Reset() {
	*x = OrganismsInfoReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_organisms_v1_organisms_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrganismsInfoReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrganismsInfoReply) ProtoMessage() {}

func (x *OrganismsInfoReply) ProtoReflect() protoreflect.Message {
	mi := &file_organisms_v1_organisms_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrganismsInfoReply.ProtoReflect.Descriptor instead.
func (*OrganismsInfoReply) Descriptor() ([]byte, []int) {
	return file_organisms_v1_organisms_proto_rawDescGZIP(), []int{15}
}

func (x *OrganismsInfoReply) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *OrganismsInfoReply) GetRealName() string {
	if x != nil {
		return x.RealName
	}
	return ""
}

func (x *OrganismsInfoReply) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *OrganismsInfoReply) GetIdCard() string {
	if x != nil {
		return x.IdCard
	}
	return ""
}

func (x *OrganismsInfoReply) GetHomeAddress() string {
	if x != nil {
		return x.HomeAddress
	}
	return ""
}

func (x *OrganismsInfoReply) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *OrganismsInfoReply) GetCreatedBy() string {
	if x != nil {
		return x.CreatedBy
	}
	return ""
}

func (x *OrganismsInfoReply) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

func (x *OrganismsInfoReply) GetUpdatedBy() string {
	if x != nil {
		return x.UpdatedBy
	}
	return ""
}

type UpdateOrganismsInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	RealName    string `protobuf:"bytes,2,opt,name=realName,proto3" json:"realName,omitempty"`       // 真实姓名
	Email       string `protobuf:"bytes,3,opt,name=email,proto3" json:"email,omitempty"`             // 邮箱地址
	IdCard      string `protobuf:"bytes,4,opt,name=idCard,proto3" json:"idCard,omitempty"`           // 身份证ID
	HomeAddress string `protobuf:"bytes,5,opt,name=homeAddress,proto3" json:"homeAddress,omitempty"` // 家庭住址
}

func (x *UpdateOrganismsInfoRequest) Reset() {
	*x = UpdateOrganismsInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_organisms_v1_organisms_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateOrganismsInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateOrganismsInfoRequest) ProtoMessage() {}

func (x *UpdateOrganismsInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_organisms_v1_organisms_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateOrganismsInfoRequest.ProtoReflect.Descriptor instead.
func (*UpdateOrganismsInfoRequest) Descriptor() ([]byte, []int) {
	return file_organisms_v1_organisms_proto_rawDescGZIP(), []int{16}
}

func (x *UpdateOrganismsInfoRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateOrganismsInfoRequest) GetRealName() string {
	if x != nil {
		return x.RealName
	}
	return ""
}

func (x *UpdateOrganismsInfoRequest) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *UpdateOrganismsInfoRequest) GetIdCard() string {
	if x != nil {
		return x.IdCard
	}
	return ""
}

func (x *UpdateOrganismsInfoRequest) GetHomeAddress() string {
	if x != nil {
		return x.HomeAddress
	}
	return ""
}

type UpdateOrganismsInfoReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Exec    bool   `protobuf:"varint,1,opt,name=exec,proto3" json:"exec,omitempty"`
	Explain string `protobuf:"bytes,2,opt,name=explain,proto3" json:"explain,omitempty"`
}

func (x *UpdateOrganismsInfoReply) Reset() {
	*x = UpdateOrganismsInfoReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_organisms_v1_organisms_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateOrganismsInfoReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateOrganismsInfoReply) ProtoMessage() {}

func (x *UpdateOrganismsInfoReply) ProtoReflect() protoreflect.Message {
	mi := &file_organisms_v1_organisms_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateOrganismsInfoReply.ProtoReflect.Descriptor instead.
func (*UpdateOrganismsInfoReply) Descriptor() ([]byte, []int) {
	return file_organisms_v1_organisms_proto_rawDescGZIP(), []int{17}
}

func (x *UpdateOrganismsInfoReply) GetExec() bool {
	if x != nil {
		return x.Exec
	}
	return false
}

func (x *UpdateOrganismsInfoReply) GetExplain() string {
	if x != nil {
		return x.Explain
	}
	return ""
}

var File_organisms_v1_organisms_proto protoreflect.FileDescriptor

var file_organisms_v1_organisms_proto_rawDesc = []byte{
	0x0a, 0x1c, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x73, 0x6d, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x6f,
	0x72, 0x67, 0x61, 0x6e, 0x69, 0x73, 0x6d, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x10,
	0x61, 0x70, 0x69, 0x2e, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x73, 0x6d, 0x73, 0x2e, 0x76, 0x31,
	0x1a, 0x17, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64,
	0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xe3, 0x01, 0x0a, 0x16, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x73, 0x6d, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x2f, 0x0a, 0x06, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x17, 0xfa, 0x42, 0x14, 0x72, 0x12, 0x32, 0x10, 0x5e, 0x31, 0x5b,
	0x33, 0x2d, 0x39, 0x5d, 0x5b, 0x30, 0x2d, 0x39, 0x5d, 0x7b, 0x39, 0x7d, 0x24, 0x52, 0x06, 0x6d,
	0x6f, 0x62, 0x69, 0x6c, 0x65, 0x12, 0x3e, 0x0a, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x22, 0xfa, 0x42, 0x1f, 0x72, 0x1d, 0x32, 0x1b,
	0x5e, 0x5b, 0xe4, 0xb8, 0x80, 0x2d, 0xe9, 0xbe, 0xa5, 0x5f, 0x61, 0x2d, 0x7a, 0x41, 0x2d, 0x5a,
	0x30, 0x2d, 0x39, 0x5d, 0x7b, 0x32, 0x2c, 0x32, 0x34, 0x7d, 0x24, 0x52, 0x08, 0x6e, 0x69, 0x63,
	0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x25, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x09, 0xfa, 0x42, 0x06, 0x72, 0x04, 0x10, 0x08,
	0x18, 0x10, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x31, 0x0a, 0x04,
	0x73, 0x61, 0x6c, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x1d, 0xfa, 0x42, 0x1a, 0x72,
	0x18, 0x32, 0x13, 0x5e, 0x5b, 0x61, 0x2d, 0x7a, 0x41, 0x2d, 0x5a, 0x30, 0x2d, 0x39, 0x5d, 0x7b,
	0x38, 0x2c, 0x31, 0x36, 0x7d, 0x24, 0xd0, 0x01, 0x01, 0x52, 0x04, 0x73, 0x61, 0x6c, 0x74, 0x22,
	0x44, 0x0a, 0x14, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x73,
	0x6d, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x65, 0x78, 0x65, 0x63, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x65, 0x78, 0x65, 0x63, 0x12, 0x18, 0x0a, 0x07, 0x65,
	0x78, 0x70, 0x6c, 0x61, 0x69, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x78,
	0x70, 0x6c, 0x61, 0x69, 0x6e, 0x22, 0xb7, 0x01, 0x0a, 0x16, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x73, 0x6d, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x17, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x42, 0x07, 0xfa, 0x42,
	0x04, 0x22, 0x02, 0x20, 0x00, 0x52, 0x02, 0x69, 0x64, 0x12, 0x41, 0x0a, 0x06, 0x6d, 0x6f, 0x62,
	0x69, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x29, 0xfa, 0x42, 0x26, 0x72, 0x24,
	0x32, 0x1f, 0x5e, 0x30, 0x3f, 0x28, 0x31, 0x33, 0x7c, 0x31, 0x34, 0x7c, 0x31, 0x35, 0x7c, 0x31,
	0x37, 0x7c, 0x31, 0x38, 0x7c, 0x31, 0x39, 0x29, 0x5b, 0x30, 0x2d, 0x39, 0x5d, 0x7b, 0x39, 0x7d,
	0x24, 0xd0, 0x01, 0x01, 0x52, 0x06, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x12, 0x41, 0x0a, 0x08,
	0x6e, 0x69, 0x63, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x25,
	0xfa, 0x42, 0x22, 0x72, 0x20, 0x32, 0x1b, 0x5e, 0x5b, 0xe4, 0xb8, 0x80, 0x2d, 0xe9, 0xbe, 0xa5,
	0x5f, 0x61, 0x2d, 0x7a, 0x41, 0x2d, 0x5a, 0x30, 0x2d, 0x39, 0x5d, 0x7b, 0x32, 0x2c, 0x32, 0x34,
	0x7d, 0x24, 0xd0, 0x01, 0x01, 0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x22,
	0x44, 0x0a, 0x14, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x73,
	0x6d, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x65, 0x78, 0x65, 0x63, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x65, 0x78, 0x65, 0x63, 0x12, 0x18, 0x0a, 0x07, 0x65,
	0x78, 0x70, 0x6c, 0x61, 0x69, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x78,
	0x70, 0x6c, 0x61, 0x69, 0x6e, 0x22, 0x8b, 0x01, 0x0a, 0x1e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x73, 0x6d, 0x73, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72,
	0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x22, 0x02, 0x20, 0x00, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x27, 0x0a, 0x09, 0x6f, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x09, 0xfa, 0x42, 0x06, 0x72, 0x04, 0x10, 0x08, 0x18, 0x10, 0x52,
	0x09, 0x6f, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x27, 0x0a, 0x09, 0x6e, 0x50,
	0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x09, 0xfa,
	0x42, 0x06, 0x72, 0x04, 0x10, 0x08, 0x18, 0x10, 0x52, 0x09, 0x6e, 0x50, 0x61, 0x73, 0x73, 0x77,
	0x6f, 0x72, 0x64, 0x22, 0x4c, 0x0a, 0x1c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x67,
	0x61, 0x6e, 0x69, 0x73, 0x6d, 0x73, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x65, 0x78, 0x65, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x04, 0x65, 0x78, 0x65, 0x63, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x78, 0x70, 0x6c, 0x61,
	0x69, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x78, 0x70, 0x6c, 0x61, 0x69,
	0x6e, 0x22, 0x31, 0x0a, 0x16, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e,
	0x69, 0x73, 0x6d, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x22, 0x02, 0x20, 0x00,
	0x52, 0x02, 0x69, 0x64, 0x22, 0x44, 0x0a, 0x14, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4f, 0x72,
	0x67, 0x61, 0x6e, 0x69, 0x73, 0x6d, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x12, 0x0a, 0x04,
	0x65, 0x78, 0x65, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x65, 0x78, 0x65, 0x63,
	0x12, 0x18, 0x0a, 0x07, 0x65, 0x78, 0x70, 0x6c, 0x61, 0x69, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x65, 0x78, 0x70, 0x6c, 0x61, 0x69, 0x6e, 0x22, 0x33, 0x0a, 0x18, 0x52, 0x65,
	0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x73, 0x6d, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x22, 0x02, 0x20, 0x00, 0x52, 0x02, 0x69, 0x64, 0x22,
	0x46, 0x0a, 0x16, 0x52, 0x65, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x4f, 0x72, 0x67, 0x61, 0x6e,
	0x69, 0x73, 0x6d, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x65, 0x78, 0x65,
	0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x65, 0x78, 0x65, 0x63, 0x12, 0x18, 0x0a,
	0x07, 0x65, 0x78, 0x70, 0x6c, 0x61, 0x69, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x65, 0x78, 0x70, 0x6c, 0x61, 0x69, 0x6e, 0x22, 0x2f, 0x0a, 0x14, 0x52, 0x65, 0x61, 0x64, 0x4f,
	0x72, 0x67, 0x61, 0x6e, 0x69, 0x73, 0x6d, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x17, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x42, 0x07, 0xfa, 0x42, 0x04,
	0x22, 0x02, 0x20, 0x00, 0x52, 0x02, 0x69, 0x64, 0x22, 0x82, 0x01, 0x0a, 0x12, 0x52, 0x65, 0x61,
	0x64, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x73, 0x6d, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12,
	0x12, 0x0a, 0x04, 0x65, 0x78, 0x65, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x65,
	0x78, 0x65, 0x63, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x78, 0x70, 0x6c, 0x61, 0x69, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x78, 0x70, 0x6c, 0x61, 0x69, 0x6e, 0x12, 0x3e, 0x0a,
	0x09, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x73, 0x6d, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x20, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x73, 0x6d, 0x73,
	0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x73, 0x6d, 0x73, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x52, 0x09, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x73, 0x6d, 0x73, 0x22, 0x83, 0x02,
	0x0a, 0x14, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x73, 0x6d, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x02, 0x70, 0x6e, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x42, 0x09, 0xfa, 0x42, 0x06, 0x1a, 0x04, 0x28, 0x01, 0x40, 0x01, 0x52, 0x02, 0x70,
	0x6e, 0x12, 0x1f, 0x0a, 0x05, 0x70, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x42, 0x09, 0xfa, 0x42, 0x06, 0x1a, 0x04, 0x28, 0x0a, 0x40, 0x01, 0x52, 0x05, 0x70, 0x53, 0x69,
	0x7a, 0x65, 0x12, 0x41, 0x0a, 0x06, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x29, 0xfa, 0x42, 0x26, 0x72, 0x24, 0x32, 0x1f, 0x5e, 0x30, 0x3f, 0x28, 0x31,
	0x33, 0x7c, 0x31, 0x34, 0x7c, 0x31, 0x35, 0x7c, 0x31, 0x37, 0x7c, 0x31, 0x38, 0x7c, 0x31, 0x39,
	0x29, 0x5b, 0x30, 0x2d, 0x39, 0x5d, 0x7b, 0x39, 0x7d, 0x24, 0xd0, 0x01, 0x01, 0x52, 0x06, 0x6d,
	0x6f, 0x62, 0x69, 0x6c, 0x65, 0x12, 0x41, 0x0a, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x25, 0xfa, 0x42, 0x22, 0x72, 0x20, 0x32, 0x1b,
	0x5e, 0x5b, 0xe4, 0xb8, 0x80, 0x2d, 0xe9, 0xbe, 0xa5, 0x5f, 0x61, 0x2d, 0x7a, 0x41, 0x2d, 0x5a,
	0x30, 0x2d, 0x39, 0x5d, 0x7b, 0x32, 0x2c, 0x32, 0x34, 0x7d, 0x24, 0xd0, 0x01, 0x01, 0x52, 0x08,
	0x6e, 0x69, 0x63, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x29, 0x0a, 0x09, 0x69, 0x73, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x42, 0x0b, 0xfa, 0x42, 0x08,
	0x1a, 0x06, 0x30, 0x00, 0x30, 0x01, 0x40, 0x01, 0x52, 0x09, 0x69, 0x73, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x64, 0x22, 0x8e, 0x01, 0x0a, 0x12, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x72, 0x67, 0x61,
	0x6e, 0x69, 0x73, 0x6d, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x65, 0x78,
	0x65, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x65, 0x78, 0x65, 0x63, 0x12, 0x18,
	0x0a, 0x07, 0x65, 0x78, 0x70, 0x6c, 0x61, 0x69, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x65, 0x78, 0x70, 0x6c, 0x61, 0x69, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x34,
	0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x73, 0x6d, 0x73, 0x2e, 0x76, 0x31, 0x2e,
	0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x73, 0x6d, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x52, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x22, 0xb6, 0x02, 0x0a, 0x0e, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x73,
	0x6d, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x6f, 0x62, 0x69, 0x6c,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x42, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x64, 0x42, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x73, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x64, 0x12, 0x4a, 0x0a, 0x0d, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x73, 0x6d, 0x73, 0x49, 0x6e,
	0x66, 0x6f, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6f,
	0x72, 0x67, 0x61, 0x6e, 0x69, 0x73, 0x6d, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x72, 0x67, 0x61,
	0x6e, 0x69, 0x73, 0x6d, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x52, 0x0d,
	0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x73, 0x6d, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x88, 0x02,
	0x0a, 0x12, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x73, 0x6d, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x61, 0x6c, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x61, 0x6c, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x64, 0x43, 0x61, 0x72, 0x64,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x69, 0x64, 0x43, 0x61, 0x72, 0x64, 0x12, 0x20,
	0x0a, 0x0b, 0x68, 0x6f, 0x6d, 0x65, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x68, 0x6f, 0x6d, 0x65, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1c,
	0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x12, 0x1c, 0x0a, 0x09,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x22, 0xf1, 0x02, 0x0a, 0x1a, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x73, 0x6d, 0x73, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x22, 0x02, 0x20, 0x00, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x41, 0x0a, 0x08, 0x72, 0x65, 0x61, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x25, 0xfa, 0x42, 0x22, 0x72, 0x20, 0x32, 0x1b, 0x5e, 0x5b, 0xe4, 0xb8, 0x80,
	0x2d, 0xe9, 0xbe, 0xa5, 0x5f, 0x61, 0x2d, 0x7a, 0x41, 0x2d, 0x5a, 0x30, 0x2d, 0x39, 0x5d, 0x7b,
	0x32, 0x2c, 0x32, 0x34, 0x7d, 0x24, 0xd0, 0x01, 0x01, 0x52, 0x08, 0x72, 0x65, 0x61, 0x6c, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x72, 0x05, 0x60, 0x01, 0xd0, 0x01, 0x01, 0x52, 0x05,
	0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x8a, 0x01, 0x0a, 0x06, 0x69, 0x64, 0x43, 0x61, 0x72, 0x64,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x72, 0xfa, 0x42, 0x6f, 0x72, 0x6d, 0x32, 0x68, 0x5e,
	0x5b, 0x31, 0x2d, 0x39, 0x5d, 0x5b, 0x30, 0x2d, 0x39, 0x5d, 0x7b, 0x35, 0x7d, 0x28, 0x31, 0x38,
	0x7c, 0x31, 0x39, 0x7c, 0x28, 0x5b, 0x32, 0x33, 0x5d, 0x5b, 0x30, 0x2d, 0x39, 0x5d, 0x29, 0x29,
	0x5b, 0x30, 0x2d, 0x39, 0x5d, 0x7b, 0x32, 0x7d, 0x28, 0x28, 0x30, 0x5b, 0x31, 0x2d, 0x39, 0x5d,
	0x29, 0x7c, 0x28, 0x31, 0x30, 0x7c, 0x31, 0x31, 0x7c, 0x31, 0x32, 0x29, 0x29, 0x28, 0x28, 0x5b,
	0x30, 0x2d, 0x32, 0x5d, 0x5b, 0x31, 0x2d, 0x39, 0x5d, 0x29, 0x7c, 0x31, 0x30, 0x7c, 0x32, 0x30,
	0x7c, 0x33, 0x30, 0x7c, 0x33, 0x31, 0x29, 0x5b, 0x30, 0x2d, 0x39, 0x5d, 0x7b, 0x33, 0x7d, 0x5b,
	0x30, 0x2d, 0x39, 0x58, 0x78, 0x5d, 0x24, 0xd0, 0x01, 0x01, 0x52, 0x06, 0x69, 0x64, 0x43, 0x61,
	0x72, 0x64, 0x12, 0x48, 0x0a, 0x0b, 0x68, 0x6f, 0x6d, 0x65, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x42, 0x26, 0xfa, 0x42, 0x23, 0x72, 0x21, 0x32, 0x1c,
	0x5e, 0x5b, 0xe4, 0xb8, 0x80, 0x2d, 0xe9, 0xbe, 0xa5, 0x5f, 0x61, 0x2d, 0x7a, 0x41, 0x2d, 0x5a,
	0x30, 0x2d, 0x39, 0x5d, 0x7b, 0x32, 0x2c, 0x31, 0x32, 0x38, 0x7d, 0x24, 0xd0, 0x01, 0x01, 0x52,
	0x0b, 0x68, 0x6f, 0x6d, 0x65, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0x48, 0x0a, 0x18,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x73, 0x6d, 0x73, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x65, 0x78, 0x65, 0x63,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x65, 0x78, 0x65, 0x63, 0x12, 0x18, 0x0a, 0x07,
	0x65, 0x78, 0x70, 0x6c, 0x61, 0x69, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65,
	0x78, 0x70, 0x6c, 0x61, 0x69, 0x6e, 0x32, 0xd1, 0x06, 0x0a, 0x09, 0x4f, 0x72, 0x67, 0x61, 0x6e,
	0x69, 0x73, 0x6d, 0x73, 0x12, 0x63, 0x0a, 0x0f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x72,
	0x67, 0x61, 0x6e, 0x69, 0x73, 0x6d, 0x73, 0x12, 0x28, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6f, 0x72,
	0x67, 0x61, 0x6e, 0x69, 0x73, 0x6d, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x73, 0x6d, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x26, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x73, 0x6d,
	0x73, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e,
	0x69, 0x73, 0x6d, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x63, 0x0a, 0x0f, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x73, 0x6d, 0x73, 0x12, 0x28, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x73, 0x6d, 0x73, 0x2e, 0x76, 0x31, 0x2e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x73, 0x6d, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6f, 0x72, 0x67,
	0x61, 0x6e, 0x69, 0x73, 0x6d, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x73, 0x6d, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x7b,
	0x0a, 0x17, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x73, 0x6d,
	0x73, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x30, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x73, 0x6d, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x73, 0x6d, 0x73, 0x50, 0x61, 0x73, 0x73,
	0x77, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2e, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x73, 0x6d, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x73, 0x6d, 0x73, 0x50, 0x61,
	0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x63, 0x0a, 0x0f, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x73, 0x6d, 0x73, 0x12, 0x28,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x73, 0x6d, 0x73, 0x2e, 0x76,
	0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x73, 0x6d,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6f,
	0x72, 0x67, 0x61, 0x6e, 0x69, 0x73, 0x6d, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x73, 0x6d, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x12, 0x69, 0x0a, 0x11, 0x52, 0x65, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x4f, 0x72, 0x67, 0x61,
	0x6e, 0x69, 0x73, 0x6d, 0x73, 0x12, 0x2a, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6f, 0x72, 0x67, 0x61,
	0x6e, 0x69, 0x73, 0x6d, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x63, 0x6f, 0x76, 0x65, 0x72,
	0x79, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x73, 0x6d, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x28, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x73, 0x6d,
	0x73, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x4f, 0x72, 0x67,
	0x61, 0x6e, 0x69, 0x73, 0x6d, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x5d, 0x0a, 0x0d, 0x52,
	0x65, 0x61, 0x64, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x73, 0x6d, 0x73, 0x12, 0x26, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x73, 0x6d, 0x73, 0x2e, 0x76, 0x31, 0x2e,
	0x52, 0x65, 0x61, 0x64, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x73, 0x6d, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6f, 0x72, 0x67, 0x61, 0x6e,
	0x69, 0x73, 0x6d, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x61, 0x64, 0x4f, 0x72, 0x67, 0x61,
	0x6e, 0x69, 0x73, 0x6d, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x5d, 0x0a, 0x0d, 0x4c, 0x69,
	0x73, 0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x73, 0x6d, 0x73, 0x12, 0x26, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x73, 0x6d, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4c,
	0x69, 0x73, 0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x73, 0x6d, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69,
	0x73, 0x6d, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e,
	0x69, 0x73, 0x6d, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x6f, 0x0a, 0x13, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x73, 0x6d, 0x73, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x2c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x73, 0x6d, 0x73,
	0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69,
	0x73, 0x6d, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x73, 0x6d, 0x73, 0x2e, 0x76,
	0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x73, 0x6d,
	0x73, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x42, 0x1f, 0x5a, 0x1d, 0x6f, 0x72,
	0x67, 0x61, 0x6e, 0x69, 0x73, 0x6d, 0x73, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x6f, 0x72, 0x67, 0x61,
	0x6e, 0x69, 0x73, 0x6d, 0x73, 0x2f, 0x76, 0x31, 0x3b, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_organisms_v1_organisms_proto_rawDescOnce sync.Once
	file_organisms_v1_organisms_proto_rawDescData = file_organisms_v1_organisms_proto_rawDesc
)

func file_organisms_v1_organisms_proto_rawDescGZIP() []byte {
	file_organisms_v1_organisms_proto_rawDescOnce.Do(func() {
		file_organisms_v1_organisms_proto_rawDescData = protoimpl.X.CompressGZIP(file_organisms_v1_organisms_proto_rawDescData)
	})
	return file_organisms_v1_organisms_proto_rawDescData
}

var file_organisms_v1_organisms_proto_msgTypes = make([]protoimpl.MessageInfo, 18)
var file_organisms_v1_organisms_proto_goTypes = []interface{}{
	(*CreateOrganismsRequest)(nil),         // 0: api.organisms.v1.CreateOrganismsRequest
	(*CreateOrganismsReply)(nil),           // 1: api.organisms.v1.CreateOrganismsReply
	(*UpdateOrganismsRequest)(nil),         // 2: api.organisms.v1.UpdateOrganismsRequest
	(*UpdateOrganismsReply)(nil),           // 3: api.organisms.v1.UpdateOrganismsReply
	(*UpdateOrganismsPasswordRequest)(nil), // 4: api.organisms.v1.UpdateOrganismsPasswordRequest
	(*UpdateOrganismsPasswordReply)(nil),   // 5: api.organisms.v1.UpdateOrganismsPasswordReply
	(*DeleteOrganismsRequest)(nil),         // 6: api.organisms.v1.DeleteOrganismsRequest
	(*DeleteOrganismsReply)(nil),           // 7: api.organisms.v1.DeleteOrganismsReply
	(*RecoveryOrganismsRequest)(nil),       // 8: api.organisms.v1.RecoveryOrganismsRequest
	(*RecoveryOrganismsReply)(nil),         // 9: api.organisms.v1.RecoveryOrganismsReply
	(*ReadOrganismsRequest)(nil),           // 10: api.organisms.v1.ReadOrganismsRequest
	(*ReadOrganismsReply)(nil),             // 11: api.organisms.v1.ReadOrganismsReply
	(*ListOrganismsRequest)(nil),           // 12: api.organisms.v1.ListOrganismsRequest
	(*ListOrganismsReply)(nil),             // 13: api.organisms.v1.ListOrganismsReply
	(*OrganismsReply)(nil),                 // 14: api.organisms.v1.OrganismsReply
	(*OrganismsInfoReply)(nil),             // 15: api.organisms.v1.OrganismsInfoReply
	(*UpdateOrganismsInfoRequest)(nil),     // 16: api.organisms.v1.UpdateOrganismsInfoRequest
	(*UpdateOrganismsInfoReply)(nil),       // 17: api.organisms.v1.UpdateOrganismsInfoReply
}
var file_organisms_v1_organisms_proto_depIdxs = []int32{
	14, // 0: api.organisms.v1.ReadOrganismsReply.Organisms:type_name -> api.organisms.v1.OrganismsReply
	14, // 1: api.organisms.v1.ListOrganismsReply.data:type_name -> api.organisms.v1.OrganismsReply
	15, // 2: api.organisms.v1.OrganismsReply.organismsInfo:type_name -> api.organisms.v1.OrganismsInfoReply
	0,  // 3: api.organisms.v1.Organisms.CreateOrganisms:input_type -> api.organisms.v1.CreateOrganismsRequest
	2,  // 4: api.organisms.v1.Organisms.UpdateOrganisms:input_type -> api.organisms.v1.UpdateOrganismsRequest
	4,  // 5: api.organisms.v1.Organisms.UpdateOrganismsPassword:input_type -> api.organisms.v1.UpdateOrganismsPasswordRequest
	6,  // 6: api.organisms.v1.Organisms.DeleteOrganisms:input_type -> api.organisms.v1.DeleteOrganismsRequest
	8,  // 7: api.organisms.v1.Organisms.RecoveryOrganisms:input_type -> api.organisms.v1.RecoveryOrganismsRequest
	10, // 8: api.organisms.v1.Organisms.ReadOrganisms:input_type -> api.organisms.v1.ReadOrganismsRequest
	12, // 9: api.organisms.v1.Organisms.ListOrganisms:input_type -> api.organisms.v1.ListOrganismsRequest
	16, // 10: api.organisms.v1.Organisms.UpdateOrganismsInfo:input_type -> api.organisms.v1.UpdateOrganismsInfoRequest
	1,  // 11: api.organisms.v1.Organisms.CreateOrganisms:output_type -> api.organisms.v1.CreateOrganismsReply
	3,  // 12: api.organisms.v1.Organisms.UpdateOrganisms:output_type -> api.organisms.v1.UpdateOrganismsReply
	5,  // 13: api.organisms.v1.Organisms.UpdateOrganismsPassword:output_type -> api.organisms.v1.UpdateOrganismsPasswordReply
	7,  // 14: api.organisms.v1.Organisms.DeleteOrganisms:output_type -> api.organisms.v1.DeleteOrganismsReply
	9,  // 15: api.organisms.v1.Organisms.RecoveryOrganisms:output_type -> api.organisms.v1.RecoveryOrganismsReply
	11, // 16: api.organisms.v1.Organisms.ReadOrganisms:output_type -> api.organisms.v1.ReadOrganismsReply
	13, // 17: api.organisms.v1.Organisms.ListOrganisms:output_type -> api.organisms.v1.ListOrganismsReply
	17, // 18: api.organisms.v1.Organisms.UpdateOrganismsInfo:output_type -> api.organisms.v1.UpdateOrganismsInfoReply
	11, // [11:19] is the sub-list for method output_type
	3,  // [3:11] is the sub-list for method input_type
	3,  // [3:3] is the sub-list for extension type_name
	3,  // [3:3] is the sub-list for extension extendee
	0,  // [0:3] is the sub-list for field type_name
}

func init() { file_organisms_v1_organisms_proto_init() }
func file_organisms_v1_organisms_proto_init() {
	if File_organisms_v1_organisms_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_organisms_v1_organisms_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateOrganismsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_organisms_v1_organisms_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateOrganismsReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_organisms_v1_organisms_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateOrganismsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_organisms_v1_organisms_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateOrganismsReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_organisms_v1_organisms_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateOrganismsPasswordRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_organisms_v1_organisms_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateOrganismsPasswordReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_organisms_v1_organisms_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteOrganismsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_organisms_v1_organisms_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteOrganismsReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_organisms_v1_organisms_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RecoveryOrganismsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_organisms_v1_organisms_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RecoveryOrganismsReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_organisms_v1_organisms_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReadOrganismsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_organisms_v1_organisms_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReadOrganismsReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_organisms_v1_organisms_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListOrganismsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_organisms_v1_organisms_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListOrganismsReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_organisms_v1_organisms_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrganismsReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_organisms_v1_organisms_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrganismsInfoReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_organisms_v1_organisms_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateOrganismsInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_organisms_v1_organisms_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateOrganismsInfoReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_organisms_v1_organisms_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   18,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_organisms_v1_organisms_proto_goTypes,
		DependencyIndexes: file_organisms_v1_organisms_proto_depIdxs,
		MessageInfos:      file_organisms_v1_organisms_proto_msgTypes,
	}.Build()
	File_organisms_v1_organisms_proto = out.File
	file_organisms_v1_organisms_proto_rawDesc = nil
	file_organisms_v1_organisms_proto_goTypes = nil
	file_organisms_v1_organisms_proto_depIdxs = nil
}
